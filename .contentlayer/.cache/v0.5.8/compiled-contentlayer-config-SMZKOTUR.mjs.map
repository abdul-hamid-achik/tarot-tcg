{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer2/source-files'\n\nexport const Card = defineDocumentType(() => ({\n  name: 'Card',\n  filePathPattern: 'cards/**/*.mdx',\n  contentType: 'mdx',\n  fields: {\n    id: {\n      type: 'string',\n      required: true,\n    },\n    name: {\n      type: 'string',\n      required: true,\n    },\n    zodiacClass: {\n      type: 'enum',\n      options: ['aries', 'taurus', 'gemini', 'cancer', 'leo', 'virgo', 'libra', 'scorpio', 'sagittarius', 'capricorn', 'aquarius', 'pisces'],\n      required: true,\n    },\n    element: {\n      type: 'enum',\n      options: ['fire', 'earth', 'air', 'water'],\n      required: true,\n    },\n    cardType: {\n      type: 'enum',\n      options: ['unit', 'spell'],\n      required: true,\n    },\n    cost: {\n      type: 'number',\n      required: true,\n    },\n    attack: {\n      type: 'number',\n      required: false,\n    },\n    health: {\n      type: 'number',\n      required: false,\n    },\n    rarity: {\n      type: 'enum',\n      options: ['common', 'uncommon', 'rare', 'legendary', 'mythic'],\n      required: true,\n    },\n    tarotNumber: {\n      type: 'string',\n      required: false,\n    },\n    tarotSymbol: {\n      type: 'string',\n      required: true,\n    },\n    description: {\n      type: 'string',\n      required: false,\n    },\n    reversedDescription: {\n      type: 'string',\n      required: false,\n    },\n    orientation: {\n      type: 'string',\n      required: false,\n    },\n    suitSymbol: {\n      type: 'string',\n      required: false,\n    },\n    keywords: {\n      type: 'list',\n      of: { type: 'string' },\n      required: false,\n    },\n    abilities: {\n      type: 'json',\n      required: false,\n    },\n    spellType: {\n      type: 'enum',\n      options: ['instant', 'ritual', 'enchantment'],\n      required: false,\n    },\n    effects: {\n      type: 'json',\n      required: false,\n    },\n  },\n  computedFields: {\n    url: {\n      type: 'string',\n      resolve: card => `/${card._raw.flattenedPath}`,\n    },\n    zodiacPath: {\n      type: 'string',\n      resolve: card => card.zodiacClass,\n    },\n    isUnit: {\n      type: 'boolean',\n      resolve: card => card.cardType === 'unit',\n    },\n    isSpell: {\n      type: 'boolean',\n      resolve: card => card.cardType === 'spell',\n    },\n    // Validation computed fields temporarily disabled due to build issues\n  },\n}))\n\nexport const ZodiacClass = defineDocumentType(() => ({\n  name: 'ZodiacClass',\n  filePathPattern: 'classes/**/*.mdx',\n  contentType: 'mdx',\n  fields: {\n    title: {\n      type: 'string',\n      required: true,\n    },\n    description: {\n      type: 'string',\n      required: true,\n    },\n  },\n  computedFields: {\n    url: {\n      type: 'string',\n      resolve: doc => `/classes/${doc._raw.flattenedPath}`,\n    },\n  },\n}))\n\nexport const MetaGuide = defineDocumentType(() => ({\n  name: 'MetaGuide',\n  filePathPattern: '*-meta.mdx',\n  contentType: 'mdx',\n  fields: {\n    title: {\n      type: 'string',\n      required: true,\n    },\n    description: {\n      type: 'string',\n      required: true,\n    },\n  },\n  computedFields: {\n    url: {\n      type: 'string',\n      resolve: doc => `/meta/${doc._raw.flattenedPath.replace('-meta', '')}`,\n    },\n  },\n}))\n\nexport default makeSource({\n  contentDirPath: './content',\n  documentTypes: [Card, ZodiacClass, MetaGuide],\n  mdx: {\n    remarkPlugins: [],\n    rehypePlugins: [],\n  },\n  disableImportAliasWarning: true,\n})\n"],
  "mappings": "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",
  "names": []
}
