// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer2/core'
import * as Local from 'contentlayer2/source-files'

export { isType } from 'contentlayer2/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Card = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Card'
  id: string
  name: string
  zodiacClass: 'aries' | 'taurus' | 'gemini' | 'cancer' | 'leo' | 'virgo' | 'libra' | 'scorpio' | 'sagittarius' | 'capricorn' | 'aquarius' | 'pisces'
  element: 'fire' | 'earth' | 'air' | 'water'
  cardType: 'unit' | 'spell'
  cost: number
  attack?: number | undefined
  health?: number | undefined
  rarity: 'common' | 'uncommon' | 'rare' | 'legendary' | 'mythic'
  tarotNumber?: string | undefined
  tarotSymbol: string
  description?: string | undefined
  reversedDescription?: string | undefined
  orientation?: string | undefined
  suitSymbol?: string | undefined
  keywords?: string[] | undefined
  abilities?: any | undefined
  spellType?: 'instant' | 'ritual' | 'enchantment' | undefined
  effects?: any | undefined
  /** MDX file body */
  body: MDX
  url: string
  zodiacPath: string
  isUnit: boolean
  isSpell: boolean
}

export type MetaGuide = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'MetaGuide'
  title: string
  description: string
  /** MDX file body */
  body: MDX
  url: string
}

export type ZodiacClass = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'ZodiacClass'
  title: string
  description: string
  /** MDX file body */
  body: MDX
  url: string
}  

/** Nested types */
  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Card | MetaGuide | ZodiacClass
export type DocumentTypeNames = 'Card' | 'MetaGuide' | 'ZodiacClass'

export type NestedTypes = never
export type NestedTypeNames = never

export type DataExports = {
  allDocuments: DocumentTypes[]
  allCards: Card[]
  allZodiacClasses: ZodiacClass[]
  allMetaGuides: MetaGuide[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Card: Card
  MetaGuide: MetaGuide
  ZodiacClass: ZodiacClass
}

export type NestedTypeMap = {

}

 